import { createSlice } from "@reduxjs/toolkit";
import { api } from "../../app/api";

// Define API endpoints for robots
const robotsApi = api.injectEndpoints({
  endpoints: (builder) => ({
    getRobots: builder.query({
      query: () => "api/v1/robots", // Endpoint to fetch all robots
      providesTags: ["Robots"],
    }),
    getRobot: builder.query({
      query: (id) => `api/v1/robots/${id}`, // Endpoint to fetch a specific robot by ID
      providesTags: (result, error, id) => [{ type: "Robots", id }],
    }),
    addRobot: builder.mutation({
      query: (robot) => ({
        url: "api/v1/robots", // Endpoint to add a new robot
        method: "POST",
        body: robot,
      }),
      invalidatesTags: ["Robots"],
    }),
    updateRobot: builder.mutation({
      query: (robot) => ({
        url: `api/v1/robots/${robot.id}`, // Endpoint to update an existing robot by ID
        method: "PUT",
        body: robot,
      }),
      invalidatesTags: (result, error, { id }) => [{ type: "Robots", id }],
    }),
    deleteRobot: builder.mutation({
      query: (id) => ({
        url: `api/v1/robots/${id}`, // Endpoint to delete a robot by ID
        method: "DELETE",
      }),
      invalidatesTags: (result, error, id) => [{ type: "Robots", id }],
    }),
  }),
});

// Export hooks generated by the API endpoints for use in components
export const {
  useGetRobotsQuery,
  useGetRobotQuery,
  useAddRobotMutation,
  useUpdateRobotMutation,
  useDeleteRobotMutation,
} = robotsApi;

// Define initial state and reducers if needed
const initialState = {};

// Define slice if needed
const robotSlice = createSlice({
  name: "robots",
  initialState,
  reducers: {
    // Add reducers if needed
  },
});

// Export reducer if needed
export default robotSlice.reducer;
